package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"
	"html"

	"github.com/getsentry/sentry-go"

	"github.com/WebEngrChild/go-graphql-server/pkg/domain/model"
	"github.com/WebEngrChild/go-graphql-server/pkg/domain/model/graph"
	"github.com/WebEngrChild/go-graphql-server/pkg/lib/graph/generated"
)

// CreateMessage is the resolver for the createMessage field.
func (r *mutationResolver) CreateMessage(ctx context.Context, input graph.NewMessage) (*model.Message, error) {
	// 入力値のエスケープ処理
	escapedText := html.EscapeString(input.Text)
	created, err := r.MsgUseCase.CreateMessage(&escapedText, &input.UserID)
	if err != nil {
		err = fmt.Errorf("resolver CreateMessage() err %w", err)
		sentry.CaptureException(err)
		return nil, err
	}

	return created, nil
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
