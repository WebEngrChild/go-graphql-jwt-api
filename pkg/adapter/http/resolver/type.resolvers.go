package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"
	"github.com/getsentry/sentry-go"

	"github.com/WebEngrChild/go-graphql-server/pkg/domain/model"
	"github.com/WebEngrChild/go-graphql-server/pkg/domain/model/graph"
	"github.com/WebEngrChild/go-graphql-server/pkg/lib/graph/generated"
)

// User is the resolver for the user field.
func (r *messageResolver) User(ctx context.Context, obj *model.Message) (*graph.User, error) {
	if obj.UserID == "" {
		return nil, nil
	}
	user, err := r.UserUseCase.LoadUser(ctx, obj.UserID)
	if err != nil {
		err = fmt.Errorf("resolver User() err %w", err)
		sentry.CaptureException(err)
		return nil, err
	}
	return user, nil
}

// Message returns generated.MessageResolver implementation.
func (r *Resolver) Message() generated.MessageResolver { return &messageResolver{r} }

type messageResolver struct{ *Resolver }
